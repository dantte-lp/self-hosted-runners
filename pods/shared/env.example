# GitHub Actions Self-Hosted Runners Configuration
# Copy this file to .env and configure for your environment

# ═══════════════════════════════════════════════════════════════════
# GitHub Repository Configuration
# ═══════════════════════════════════════════════════════════════════

# Repository URL to register runners with
REPO_URL=https://github.com/dantte-lp/ocserv-agent

# Runner registration token (REQUIRED)
# Get a fresh token with: make token
# Or manually: gh api --method POST /repos/dantte-lp/ocserv-agent/actions/runners/registration-token --jq '.token'
# NOTE: Tokens expire after 1 hour
RUNNER_TOKEN=your-token-here

# ═══════════════════════════════════════════════════════════════════
# Debian Runner Configuration
# ═══════════════════════════════════════════════════════════════════

# Runner name (appears in GitHub UI)
DEBIAN_RUNNER_NAME=debian-runner-ocserv-agent

# Runner labels (comma-separated, no spaces)
# These labels are used in workflow files to target specific runners
DEBIAN_RUNNER_LABELS=self-hosted,linux,x64,debian,docker,security-scan,deb-build

# Runner group (default: Default)
# For organization runners, you can specify a custom group
DEBIAN_RUNNER_GROUP=Default

# ═══════════════════════════════════════════════════════════════════
# Oracle Linux Runner Configuration
# ═══════════════════════════════════════════════════════════════════

# Runner name (appears in GitHub UI)
ORACLE_RUNNER_NAME=oraclelinux-runner-ocserv-agent

# Runner labels (comma-separated, no spaces)
# These labels are used in workflow files to target specific runners
ORACLE_RUNNER_LABELS=self-hosted,linux,x64,oracle-linux,rpm-build,mock,podman,el10

# Runner group (default: Default)
ORACLE_RUNNER_GROUP=Default

# ═══════════════════════════════════════════════════════════════════
# Advanced Configuration (Optional)
# ═══════════════════════════════════════════════════════════════════

# Workspace directory inside containers
# Default: /workspace (mounted from /opt/projects/repositories for builds)
# WORKSPACE_DIR=/workspace

# Runner work directory
# Default: _work (created inside container, ephemeral)
# RUNNER_WORK_DIR=_work

# Additional runner arguments
# See: https://github.com/actions/runner/blob/main/docs/start/envlinux.md
# RUNNER_EXTRA_ARGS=--disableupdate

# ═══════════════════════════════════════════════════════════════════
# Resource Limits (Systemd)
# ═══════════════════════════════════════════════════════════════════

# These can be set in the .container quadlet files
# CPU quota (percentage of one CPU core, e.g., 200% = 2 cores)
# CPU_QUOTA=400%

# Memory limit (e.g., 8G, 4096M)
# MEMORY_LIMIT=8G

# Memory swap limit
# MEMORY_SWAP_LIMIT=8G

# ═══════════════════════════════════════════════════════════════════
# Build Configuration
# ═══════════════════════════════════════════════════════════════════

# Podman storage driver (for nested containers)
# Options: overlay, vfs
# vfs is slower but more compatible
STORAGE_DRIVER=vfs

# Buildah isolation mode
# Options: chroot, rootless, oci
BUILDAH_ISOLATION=chroot

# ═══════════════════════════════════════════════════════════════════
# Notes
# ═══════════════════════════════════════════════════════════════════

# 1. Runner tokens expire after 1 hour - regenerate before starting runners
# 2. Runners automatically re-register on container restart if token is valid
# 3. For persistent runner configuration, consider using a runner app token
# 4. See docs/SETUP.md for detailed configuration instructions
